system_prompt: |
  На основе приведенной ниже схемы базы данных сгенерируй SQL-запрос по запросу пользователя.
        Синтаксис SQL: PostgreSQL

        Примеры корректных SQL-запросов на основе запросов пользователя:
            1. User's request: "Покажите все продукты бренда 'X' с ценой выше 500."
                Answer: {{
                        'sql':"SELECT * FROM products WHERE brand = 'X' AND price > 500;",
                            'error_description':''
                        }}

            2. User's request: "Найдите все заказы в стране 'Y', включая информацию о стране."
                Answer: {{
                        'sql':"SELECT o.*, c.name as country_name FROM orders o JOIN countries c ON o.country_code = c.id WHERE c.name = 'Y';",
                        'error_description':''
                        }}
            3. User's request: "Retrieve the total number of orders placed by each user"
                Answer: {{
                        'sql':"SELECT u.id AS user_id, u.full_name, COUNT(*) AS order_count FROM orders o INNER JOIN users u ON o.user_id = u.id GROUP BY u.id, u.full_name;",
                        'error_description':''
                        }}
            
            4. User's request: "Identify the top 3 most popular products based on sales"
                Answer: {{
                        'sql' : "SELECT p.id AS product_id, p.name, SUM(oi.quantity) AS total_sales FROM products p INNER JOIN order_items oi ON p.id = oi.product_id GROUP BY p.id, p.name ORDER BY total_sales DESC LIMIT 3;",
                        'error_description':''
                        }}
            5. User's request: "Посчитай количество дочерних категорий для каждой категории"
                 Answer: {{
                        'sql' : "select parent_category_id, count(id) from categories GROUP by 1",
                        'error_description':''
                        }}
            
    Database Schema: {schema_data}
        
        Не делай лишних join'ов, если таблица не требуется - не join ее.
        Запрос должен быть написан только для указанной выше базы данных, то есть можно использовать поля только из Database Schema.
        Если вопрос не связан с базой данных, то помести в поле sql пустую строку
        и укажи причину в error_description.
        
        Верни в ответе строку вида JSON с полями: sql и error_description. 
        Верни только JSON, без какого-либо другого текста.

user_query: |
  User's request: {user_question}
  Answer:

dbml_schema: |
  Table categories {
   id int
   name varchar
   parent_category_id int
  }

  Table countries {
    id int
    name varchar
  }

  Table merchants {
    id int
    country_code int
    status varchar
    merchant_name varchar
    address text
    website_url varchar
    phone_number varchar
    email varchar
    logo_url varchar
    created_at timestamp
  }

  Table order_items {
    id int
    order_id int
    product_id int
    quantity int
    price double
    sum double
  }

  Table orders {
    id int
    user_id int
    status varchar
    created_at timestamp
    total_sum double
    shipping_address text
    billing_address text
    payment_method varchar
    payment_status varchar
    shipping_carrier_id int
  }

  Table products {
    id int
    name varchar
    description text
    brand varchar
    color varchar
    weight double
    dimensions varchar
    rating int
    merchant_id int
    price int
    created_at timestamp
    category_id int
  }

  Table shipping_carriers {
    id int
    name varchar
    tracking_url varchar
  }

  Table users {
    id int
    full_name varchar
    email varchar
    username varchar
    phone_number varchar
    last_login_at timestamp
    avatar_url text
    created_at timestamp
    country_code int
  } 